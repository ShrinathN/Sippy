#ifndef LSM6DSL_H
#define LSM6DSL_H

#include "main.h"

typedef enum
{
    LSM6DSL_REG_FUNC_CFG_ACCESS = 0x01,
    LSM6DSL_REG_SENSOR_SYNC_TIME_FRAME = 0x04,
    LSM6DSL_REG_SENSOR_SYNC_RES_RATIO = 0x05,
    LSM6DSL_REG_FIFO_CTRL1,
    LSM6DSL_REG_FIFO_CTRL2,
    LSM6DSL_REG_FIFO_CTRL3,
    LSM6DSL_REG_FIFO_CTRL4,
    LSM6DSL_REG_FIFO_CTRL5,
    LSM6DSL_REG_DRDY_PULSE_CFG_G,
    LSM6DSL_REG_INT1_CTRL = 0x0d,
    LSM6DSL_REG_INT2_CTRL,
    LSM6DSL_REG_WHO_AM_I,
    LSM6DSL_REG_CTRL1_XL,
    LSM6DSL_REG_CTRL2_G,
    LSM6DSL_REG_CTRL3_C,
    LSM6DSL_REG_CTRL4_C,
    LSM6DSL_REG_CTRL5_C,
    LSM6DSL_REG_CTRL6_C,
    LSM6DSL_REG_CTRL7_G,
    LSM6DSL_REG_CTRL8_XL,
    LSM6DSL_REG_CTRL9_XL,
    LSM6DSL_REG_CTRL10_C,
    LSM6DSL_REG_MASTER_CONFIG,
    LSM6DSL_REG_WAKE_UP_SRC,
    LSM6DSL_REG_TAP_SRC,
    LSM6DSL_REG_D6D_SRC,
    LSM6DSL_REG_STATUS_REG,
    LSM6DSL_REG_OUT_TEMP_L = 0x20,
    LSM6DSL_REG_OUT_TEMP_H,
    LSM6DSL_REG_OUTX_L_G,
    LSM6DSL_REG_OUTX_H_G,
    LSM6DSL_REG_OUTY_L_G,
    LSM6DSL_REG_OUTY_H_G,
    LSM6DSL_REG_OUTZ_L_G,
    LSM6DSL_REG_OUTZ_H_G,
    LSM6DSL_REG_OUTX_L_XL,
    LSM6DSL_REG_OUTX_H_XL,
    LSM6DSL_REG_OUTY_L_XL,
    LSM6DSL_REG_OUTY_H_XL,
    LSM6DSL_REG_OUTZ_L_XL,
    LSM6DSL_REG_OUTZ_H_XL,
    LSM6DSL_REG_SENSORHUB1_REG,
    LSM6DSL_REG_SENSORHUB2_REG,
    LSM6DSL_REG_SENSORHUB3_REG,
    LSM6DSL_REG_SENSORHUB4_REG,
    LSM6DSL_REG_SENSORHUB5_REG,
    LSM6DSL_REG_SENSORHUB6_REG,
    LSM6DSL_REG_SENSORHUB7_REG,
    LSM6DSL_REG_SENSORHUB8_REG,
    LSM6DSL_REG_SENSORHUB9_REG,
    LSM6DSL_REG_SENSORHUB10_REG,
    LSM6DSL_REG_SENSORHUB11_REG,
    LSM6DSL_REG_SENSORHUB12_REG,
    LSM6DSL_REG_FIFO_STATUS1,
    LSM6DSL_REG_FIFO_STATUS2,
    LSM6DSL_REG_FIFO_STATUS3,
    LSM6DSL_REG_FIFO_STATUS4,
    LSM6DSL_REG_FIFO_DATA_OUT_L,
    LSM6DSL_REG_FIFO_DATA_OUT_H,
    LSM6DSL_REG_TIMESTAMP0_REG,
    LSM6DSL_REG_TIMESTAMP1_REG,
    LSM6DSL_REG_TIMESTAMP2_REG,
    LSM6DSL_REG_STEP_TIMESTAMP_L = 0x49,
    LSM6DSL_REG_STEP_TIMESTAMP_H,
    LSM6DSL_REG_STEP_COUNTER_L,
    LSM6DSL_REG_STEP_COUNTER_H,
    LSM6DSL_REG_SENSORHUB13_REG,
    LSM6DSL_REG_SENSORHUB14_REG,
    LSM6DSL_REG_SENSORHUB15_REG,
    LSM6DSL_REG_SENSORHUB16_REG,
    LSM6DSL_REG_SENSORHUB17_REG,
    LSM6DSL_REG_SENSORHUB18_REG,
    LSM6DSL_REG_FUNC_SRC1,
    LSM6DSL_REG_FUNC_SRC2,
    LSM6DSL_REG_WRIST_TILT_IA,
    LSM6DSL_REG_TAP_CFG = 0x58,
    LSM6DSL_REG_TAP_THS_6D,
    LSM6DSL_REG_INT_DUR2,
    LSM6DSL_REG_WAKE_UP_THS,
    LSM6DSL_REG_WAKE_UP_DUR,
    LSM6DSL_REG_FREE_FALL,
    LSM6DSL_REG_MD1_CFG,
    LSM6DSL_REG_MD2_CFG,
    LSM6DSL_REG_MASTER_CMD_CODE,
    LSM6DSL_REG_SENS_SYNC_SPI_ERROR_CODE,
    LSM6DSL_REG_OUT_MAG_RAW_X_L = 0x66,
    LSM6DSL_REG_OUT_MAG_RAW_X_H,
    LSM6DSL_REG_OUT_MAG_RAW_Y_L,
    LSM6DSL_REG_OUT_MAG_RAW_Y_H,
    LSM6DSL_REG_OUT_MAG_RAW_Z_L,
    LSM6DSL_REG_OUT_MAG_RAW_Z_H,
    LSM6DSL_REG_X_OFS_USR = 0x73,
    LSM6DSL_REG_Y_OFS_USR,
    LSM6DSL_REG_Z_OFS_USR,
} LSM6DSL_Register;

typedef enum
{
    LSM6DSL_ACCEL_ODR_PD,
    LSM6DSL_ACCEL_ODR_1,
    LSM6DSL_ACCEL_ODR_2,
    LSM6DSL_ACCEL_ODR_3,
    LSM6DSL_ACCEL_ODR_4,
    LSM6DSL_ACCEL_ODR_5,
    LSM6DSL_ACCEL_ODR_6,
    LSM6DSL_ACCEL_ODR_7,
    LSM6DSL_ACCEL_ODR_8,
    LSM6DSL_ACCEL_ODR_9,
    LSM6DSL_ACCEL_ODR_10
} LSM6DSL_Accel_ODR;

typedef enum
{
    LSM6DSL_ACCEL_FS_2G,
    LSM6DSL_ACCEL_FS_16G,
    LSM6DSL_ACCEL_FS_4G,
    LSM6DSL_ACCEL_FS_8G,
} LSM6DSL_AccelFullScale;

typedef enum
{
    LSM6DSL_LPF1_BW_OFF,
    LSM6DSL_LPF1_BW_ON,
} LSM6DSL_LPF1_BW;

typedef enum
{
    LSM6DSL_BW0_1_5_KHZ,
    LSM6DSL_BW0_400_HZ,
} LSM6DSL_BW0_XL;

typedef enum
{
    LSM6DSL_GYRO_ODR_PD,
    LSM6DSL_GYRO_ODR_1,
    LSM6DSL_GYRO_ODR_2,
    LSM6DSL_GYRO_ODR_3,
    LSM6DSL_GYRO_ODR_4,
    LSM6DSL_GYRO_ODR_5,
    LSM6DSL_GYRO_ODR_6,
    LSM6DSL_GYRO_ODR_7,
    LSM6DSL_GYRO_ODR_8,
    LSM6DSL_GYRO_ODR_9,
    LSM6DSL_GYRO_ODR_10,
} LSM6DSL_Gyro_ODR;

typedef enum
{
    LSM6DSL_GYRO_FS_125DPS = 0b001,
    LSM6DSL_GYRO_FS_250DPS = 0b000,
    LSM6DSL_GYRO_FS_500DPS = 0b010,
    LSM6DSL_GYRO_FS_1000DPS = 0b100,
    LSM6DSL_GYRO_FS_2000DPS = 0b110,
} LSM6DSL_GyroFullScale;

typedef struct
{
    uint16_t gyro_x;
    uint16_t gyro_y;
    uint16_t gyro_z;
    uint16_t accel_x;
    uint16_t accel_y;
    uint16_t accel_z;
} LSM6DSL_Data_Raw;

typedef struct
{
    float gyro_x;
    float gyro_y;
    float gyro_z;
    float accel_x;
    float accel_y;
    float accel_z;
} LSM6DSL_Data;


// // template
// typedef enum
// {

// } LSM6DSL_;

// public functions
void LSM6DSL_set_handle(spi_device_handle_t *handle, SemaphoreHandle_t * spi_mutex_local);
void LSM6DSL_Init();
void LSM6DSL_ReadData(LSM6DSL_Data *data_output);
#endif